generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model bill {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  value      Int
  pixKey     String
  categoryId String     @db.ObjectId
  ownerId    String     @db.ObjectId
  billStatus billType
  expireDate DateTime
  createdAt  DateTime?  @default(now())
  category   category   @relation(fields: [categoryId], references: [id])
  users      users      @relation(fields: [ownerId], references: [id])
  userBill   userBill[]
}

model category {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  bill bill[]
}

model friendship {
  id                               String      @id @default(auto()) @map("_id") @db.ObjectId
  userId                           String      @db.ObjectId
  friendId                         String      @db.ObjectId
  requestStatus                    requestType
  users_friendship_friendIdTousers users       @relation("friendship_friendIdTousers", fields: [friendId], references: [id])
  users_friendship_userIdTousers   users       @relation("friendship_userIdTousers", fields: [userId], references: [id])
}

model session {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  token  String
  users  users  @relation(fields: [userId], references: [id])
}

model userBill {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  userId        String   @db.ObjectId
  billId        String   @db.ObjectId
  value         Int
  paymentStatus billType
  bill          bill     @relation(fields: [billId], references: [id])
  users         users    @relation(fields: [userId], references: [id])
}

model users {
  id                                    String       @id @default(auto()) @map("_id") @db.ObjectId
  email                                 String       @unique
  name                                  String
  password                              String?
  createdAt                             DateTime?    @default(now())
  friendship_friendship_friendIdTousers friendship[] @relation("friendship_friendIdTousers")
  friendship_friendship_userIdTousers   friendship[] @relation("friendship_userIdTousers")
  session                               session[]
  userBill                              userBill[]
  bill                                  bill[]
}

enum billType {
  PAID
  PENDING
}

enum requestType {
  PENDING
  ACCEPTED
  REJECTED
}
